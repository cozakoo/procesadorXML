/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package IU.Forms;

import IU.Buttons.Eliminar.EliminarButtonEditorConcepto;
import IU.Buttons.Eliminar.EliminarButtonRender;
import IU.Buttons.Modificar.ModificarButtonRender;
import IU.Buttons.Modificar.ModificarButton_conceptos;
import Interfaz.UpdateListener;
import java.awt.Component;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import main.DataBase;
import util.IuUtils;

/**
 *
 * @author dgc06
 */
public class ViewConcParam extends javax.swing.JFrame implements UpdateListener {

    /**
     * Creates new form ViewConceptos
     */
    private DataBase db;
    private String sql;

    public ViewConcParam(DataBase db) {
        initComponents();
        this.db = db;
        sql = "select * from concparam order by 1, 2";
        obtenerRegistros(sql);
        cargarButtons();
        ajustarTamaniosColums(jTable);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        LeyjTextField = new javax.swing.JTextField();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        cantRegistrosJlabel = new javax.swing.JLabel();
        concepjTextField = new javax.swing.JTextField();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel6 = new javax.swing.JLabel();
        iiiggjCheckBox = new javax.swing.JCheckBox();
        sicorejCheckBox = new javax.swing.JCheckBox();
        sicossjCheckBox = new javax.swing.JCheckBox();
        librajCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable);

        jLabel1.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\dgc06\\Documents\\Proyectos Java Netbeans\\procesadorXML\\images\\filtro.png")); // NOI18N
        jLabel1.setText("Filtrar");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\dgc06\\Documents\\Proyectos Java Netbeans\\procesadorXML\\images\\agregar.png")); // NOI18N
        jLabel2.setText("Crear Nuevo");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });

        jLabel3.setText("Cantidad Registros:");

        cantRegistrosJlabel.setText("000000000000");

        concepjTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                concepjTextFieldActionPerformed(evt);
            }
        });

        jLabel5.setText("Ley:");

        jLabel6.setText("Concepto:");

        iiiggjCheckBox.setText("IIGG");

        sicorejCheckBox.setText("SICORE");
        sicorejCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sicorejCheckBoxActionPerformed(evt);
            }
        });

        sicossjCheckBox.setText("SICOSS");
        sicossjCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sicossjCheckBoxActionPerformed(evt);
            }
        });

        librajCheckBox.setText("LIBRA");
        librajCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                librajCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(iiiggjCheckBox)
                        .addGap(18, 18, 18)
                        .addComponent(sicossjCheckBox)
                        .addGap(18, 18, 18)
                        .addComponent(sicorejCheckBox)
                        .addGap(18, 18, 18)
                        .addComponent(librajCheckBox))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LeyjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(concepjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(32, 32, 32))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(796, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cantRegistrosJlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LeyjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(concepjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(iiiggjCheckBox)
                            .addComponent(sicorejCheckBox)
                            .addComponent(sicossjCheckBox)
                            .addComponent(librajCheckBox))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(37, 37, 37)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cantRegistrosJlabel))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        // TODO add your handling code here:
        new ConcParamForm(false, db, this).setVisible(true);
        
    }//GEN-LAST:event_jLabel2MousePressed

    private void concepjTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_concepjTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_concepjTextFieldActionPerformed

    private void sicorejCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sicorejCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sicorejCheckBoxActionPerformed

    private void sicossjCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sicossjCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sicossjCheckBoxActionPerformed

    private void librajCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_librajCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_librajCheckBoxActionPerformed
    
    
    private String obtenerCondicilFiltro(){
        String condicion = "where ";
        boolean isEmptyLey = LeyjTextField.getText().isEmpty();
        boolean isEmptyConc = concepjTextField.getText().isEmpty();
        boolean existFiltAfter = false;
        
        if(!isEmptyLey){ 
           condicion += "ley = " + LeyjTextField.getText();
           existFiltAfter = true;
        }
        
        if(!isEmptyConc){
            if(existFiltAfter) condicion += " and ";
 
            condicion += "conc = "+ concepjTextField.getText();
            existFiltAfter = true;
        }
        
        if(iiiggjCheckBox.isSelected()){
            if(existFiltAfter){
            condicion += " and ";
            }
            condicion += "iigg = "+ 1;
            existFiltAfter = true;
        }
        
        if(sicossjCheckBox.isSelected()){
            if(existFiltAfter){
            condicion += " and ";
            }
            condicion += "sicoss = "+ 1;
            existFiltAfter = true;
        }
        
        
        if(sicossjCheckBox.isSelected()){
            if(existFiltAfter){
            condicion += " and ";
            }
            condicion += "sicore = "+ 1;
            existFiltAfter = true;
        }
        
        if(librajCheckBox.isSelected()){
            if(existFiltAfter){
            condicion += " and ";
            }
            condicion += "libra = "+ 1;
            existFiltAfter = true;
        }
        
        return condicion;
        
        
        
        
    }
    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
        // TODO add your handling code here:
        
        String condicionLey = !LeyjTextField.getText().isEmpty() ? "ley = " + LeyjTextField.getText() +" and " : "";
        String condicionConcep = !concepjTextField.getText().isEmpty() ? "conc = "+ concepjTextField.getText()  : "";
        String condicionIIGG = iiiggjCheckBox.isSelected() ? "iigg = "+ 1+" and " : "";
        String condicionSicoss = sicossjCheckBox.isSelected() ? "sicoss = "+ 1 +" and " : "";
        String condicionSicore = sicorejCheckBox.isSelected() ? "sicore = "+ 1 +" and " : "";
        String condicionlibra = librajCheckBox.isSelected() ? "libra = "+1 +" ": "";
        
        
        sql = "select * from concparam "  +
              obtenerCondicilFiltro()
              + " order by 1,2";
        System.out.println(sql);
        obtenerRegistros(sql);
        cargarButtons();
        ajustarTamaniosColums(jTable);
        
    }//GEN-LAST:event_jLabel1MousePressed

    public static DefaultTableModel crearModel(ResultSet rs) throws SQLException {
        DefaultTableModel model = new DefaultTableModel() {

            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 13 || column == 14; // Solo la columna "Acción" es editable
            }

        };
        boolean columnasNoCargadas = true;
        int indexFila;
        String resultadoSQL = "";
        int numColumnas = 0;

        try {
            int cantBotonsEdit = 2;
            int totalColumnas = rs.getMetaData().getColumnCount() + cantBotonsEdit;
            numColumnas = rs.getMetaData().getColumnCount();

            while (rs.next()) {
                if (columnasNoCargadas) {
                    for (int i = 1; i <= numColumnas; i++) {
                        if (!"".equals(resultadoSQL)) {
                            if (i < numColumnas) {
                                resultadoSQL = rs.getMetaData().getColumnName(i);
                            } else {
                                resultadoSQL = rs.getMetaData().getColumnName(i) + resultadoSQL;
                            }
                        } else if (i < numColumnas) {
                            resultadoSQL = rs.getMetaData().getColumnName(i);
                        } else {
                            resultadoSQL = rs.getMetaData().getColumnName(i);
                        }

                        model.addColumn(resultadoSQL);
                        resultadoSQL = "";
                        columnasNoCargadas = false;
                    }
                    model.addColumn("");
                    model.addColumn("");

                }

                Object[] row = new Object[totalColumnas];
                indexFila = 0;
                Object obj;
                resultadoSQL = " ";

                for (int i = 1; i <= numColumnas; i++) {
                    obj = rs.getObject(i);
                    if (obj != null) {
                        if (obj instanceof Double) {
                            DecimalFormat formatea = new DecimalFormat("###,##0.00");
                            row[indexFila] = formatea.format(obj);
                        } else {
                            row[indexFila] = obj;
                        }

                        resultadoSQL = "";
                    } else {
                        row[indexFila] = " ";
                    }
                    indexFila++;
                }

                model.addRow(row);

                resultadoSQL = "";

            }
        } catch (SQLException e) {
        }
        return model;
    }

    public static void configAnchoUltimasColumas(JTable tabla) {
        int numeroColumnas = tabla.getColumnCount();

        // Configurar ancho para la penúltima columna
        tabla.getColumnModel().getColumn(numeroColumnas - 2).setPreferredWidth(100);

        // Configurar ancho para la última columna
        tabla.getColumnModel().getColumn(numeroColumnas - 1).setPreferredWidth(200);
    }
    
    

    public static void ajustarAnchoColumnas(JTable tabla) {
        final TableColumnModel columnModel = tabla.getColumnModel();
        for (int column = 0; column < tabla.getColumnCount(); column++) {
            int anchoMaximo = 50; // Ancho mínimo inicial
            for (int row = 0; row < tabla.getRowCount(); row++) {
                TableCellRenderer renderer = tabla.getCellRenderer(row, column);
                Component comp = tabla.prepareRenderer(renderer, row, column);
                anchoMaximo = Math.max(comp.getPreferredSize().width + 10, anchoMaximo);
            }
            columnModel.getColumn(column).setPreferredWidth(anchoMaximo);
        }
    }
    
    private int getCantRegistros(){
      return jTable.getRowCount();
    }
    
    private void obtenerRegistros(String sql) {

        try {

            DefaultTableModel model = crearModel(db.consulta(sql));
            jTable.setModel(model);
            String cant = Integer.toString(getCantRegistros());
            cantRegistrosJlabel.setText(cant);
            //jTable.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            //jScrollPane1.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);

            //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        } catch (SQLException ex) {
            Logger.getLogger(ViewConcParam.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cargarButtons() {

        jTable.getColumnModel().getColumn(13).setCellRenderer(new ModificarButtonRender() {
        });
        jTable.getColumnModel().getColumn(14).setCellRenderer(new EliminarButtonRender() {
        });

        ModificarButton_conceptos buttonModif = new ModificarButton_conceptos();
        buttonModif.addlistener(this);
        
        EliminarButtonEditorConcepto buttonDelete = new EliminarButtonEditorConcepto(db);
        buttonDelete.addlistener(this);
        jTable.getColumnModel().getColumn(13).setCellEditor(buttonModif);
        jTable.getColumnModel().getColumn(14).setCellEditor(buttonDelete);
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JTextField LeyjTextField;
    javax.swing.JLabel cantRegistrosJlabel;
    javax.swing.JTextField concepjTextField;
    javax.swing.JCheckBox iiiggjCheckBox;
    javax.swing.JScrollPane jScrollPane1;
    javax.swing.JTable jTable;
    javax.swing.JCheckBox librajCheckBox;
    javax.swing.JCheckBox sicorejCheckBox;
    javax.swing.JCheckBox sicossjCheckBox;
    // End of variables declaration//GEN-END:variables

    @Override
    public void updateTableData() {
      
      obtenerRegistros(sql);
      cargarButtons();
      ajustarTamaniosColums(jTable);
      
    }
    private void ajustarTamaniosColums(JTable jTable) {
        ajustarAnchoColumnas(jTable);
        //ajustarTamaniosColums(jTable);
    }
}
